Aparência geral:
    ✔ Crie uma pasta "img" dentro da pasta /src/assets/ @done(21-08-30 10:19)
    A pasta assets é uma pasta de arquivos estáticos. Muito apropriada para armazenamento de imagens
    utilizadas no layout das páginas
    ✔ Salve na pasta /src/assets/img a imagem https://github.com/sergiomoura/contatos-html-template/blob/main/img/bg.jpg @done(21-08-30 10:19)
    ✔ Aplicar geral.css para folha de estilos que será usada no site inteiro. @done(21-08-30 10:19)
    . Visite
    . https://sergiomoura.github.io/contatos-html-template/home.html
    . https://github.com/sergiomoura/contatos-html-template
    ✔ Limpe app.component.html @done(21-08-30 10:22)
    ✔ Visite localhost:4200 e verifique se o background já está visível @done(21-08-30 10:22)
    ✔ Incorpore os css externos no index.html @done(21-08-30 10:23)
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin="">
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@300&amp;display=swap" rel="stylesheet">

Criação de Menu:
    ✔ Criar componentnte components/Menu @done(21-08-30 10:46)
    O conteúdo de menu.component.html dele deve ser o do elemento nav contida em https://github.com/sergiomoura/contatos-html-template/blob/main/home.html
    ✔ Adicione esse componente ao app.component.html @done(21-08-30 10:47)
    ✔ Dê estilo a ele baseado no css https://github.com/sergiomoura/contatos-html-template/blob/main/css/home.css @done(21-08-30 10:47)
    . *Observe que o link para sair do sistema não está aparecendo corretamente (exit_to_app)*
    ✔ Importe as fontes do material icon fonts para o seu projeto adicionando a linha de código no index.html @done(21-08-30 10:47)
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    ✔ Verifique se o menu aparece corretamente. @done(21-08-30 10:47)

Criação de Lista de Contatos:
    ✔ Criar o componente components/ListaDeContatos @done(21-08-30 11:04)
    O conteúdo de lista-de-contatos.component.html deve ser o main de https://github.com/sergiomoura/contatos-html-template/blob/main/home.html
    ✔ Adicione esse componente ao app.component.html @done(21-08-30 11:04)
    ✔ Dê o estilo desse componente baseado no css https://github.com/sergiomoura/contatos-html-template/blob/main/css/home.css @done(21-08-30 11:04)
    ✔ Verifique se a lista de contatos aparece corretamente. @done(21-08-30 11:04)

Criação de Componente contato:
    ✔ Criar componente components/Contato @done(21-08-30 11:31)
    ✔ Utilizar como componente com componente uma das sections contidas na main do lista-de-contatos.component.html @done(21-08-30 11:31)
    ✔ Utilizar o css apropriado para esse componente. @done(21-08-30 11:31)
    ✔ Reescrever o html do componente lista de contatos para exibir uma ou duas dezenas de app-contato @done(21-08-30 11:31)

Fazendo que os contatos sejam mais dinâmicos:
    ✔ Crie uma pasta models dentro da pastas src/app @done(21-08-30 12:06)
    ✔ Crie nessa pasta models um arquivo Contato.ts @done(21-08-30 12:06)
    Exporte de dentro desse arquivo uma interface que defina 3 campos
    .nome (do tipo string),
    .email (do tipo string) 
    .tels (um array de strings)
    ✔ Declare na classe ListaDeContatosComponent um atributo contatos do tipo array de contatos @done(21-08-30 12:07)
    ✔ Atribua a esse atributo um array com pelo menos 10 contatos @done(21-08-30 12:07)
    ✔ Faça com que esses contatos sejam exibidos. @done(21-08-30 14:24)

Fazendo com que contatos sejam levantados a partir de um servico:
    ✔ Crie um serviço services/Contato @done(21-08-31 10:12)
    ✔ Declare um atributo privado contatos contendo o array de contatos que, agora, não deve mais estar na component ListaDeContatos @done(21-08-31 10:14)
    ✔ Crie nesse serviço a função getContatos() que retorna a lista de contatos. @done(21-08-31 10:14)
    ✔ Importe o serviço ContatoService na Componente ListaDeContatos @done(21-08-31 10:14)
    ✔ Crie um atributo privado cs da classe ContatoService e o intancie. @done(21-08-31 10:15)
    ✔ No constructor do ListaDeContatosComponent levante os contatos usando contatoService.getContato e atribua-os ao atributo contatos. @done(21-08-31 10:16)
    
Criação e Exibição do componente que adiciona/cria um novo contato:
    ✔ Crie o componente components/CreateContato @done(21-08-31 11:03)
    ✔ Estruture o template dele com base no https://github.com/sergiomoura/contatos-html-template/blob/main/home.html @done(21-08-31 11:03)
    ✔ Estilize ele com base nos seletores #modal do arquivo https://github.com/sergiomoura/contatos-html-template/blob/main/css/home.css @done(21-08-31 11:03)
    Fazendo com que o componente comece "escondido":
        ✔ Crie uma propriedade mostrandoCreateContato no componente app.component.ts e atribua a ela false @done(21-08-31 11:03)
        ✔ Marque app-create-contato para que ele só seja exibido se o mostrandoCreateContato seja true (Dica: *ngIf) @done(21-08-31 11:04)
    Fazendo com que ele seja exibido quando o menu seja clicado:
        ✔ No MenuComponent.ts crie uma função mostrarModalClick que seja executada toda vez que o item "Adicionar Contato" seja clicado. @done(21-08-31 11:55)
        ☐ Crie um emissor de evento e faça com que ele emita um evento na função mostrarModalClick
        ☐ No app.component.html associe o evento emitido à execução de uma função mostrarModal.
           Essa função, definida no AppComponent, deve alterar o valor do atributo mostrandoCreateContato para true;
    Fazendo com que ele seja escondido quando o cancelar seja clicado:
        ☐ ... escreva aqui os passos ... análogos ao do item anterior.




Archive:
